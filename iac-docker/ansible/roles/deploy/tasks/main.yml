---
- name: "check if this is really ubuntu"
  fail:
    msg: "This role is only supported for Ubuntu hosts"
  when: ansible_distribution != 'Ubuntu'

# force ansible to refresh user groups
- name: reset ssh connection
  meta: reset_connection

- name: install pip3
  become: yes
  become_method: sudo
  apt: 
    update_cache: yes
    name: python3-pip 
    state: latest

- name: install docker SDK for python
  pip:
    name: docker

- name: install pymongo SDK for python/mongodb
  pip:
    name: pymongo

- name: create the mongodb data dir
  file:
    path: "{{ mongodb_dir }}"
    state: directory

- name: create a docker network
  docker_network:
    name: "{{ docker_network_name }}"

- name: create mongodb container and connect to network
  docker_container:
    state: started
    name: mongo
    image: "mongo:latest"
    volumes:
      - /home/vagrant/data:/data/db
    ports:
     - "27017:27017"
    networks:
      - name: "{{ docker_network_name }}"
    env:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "redhat"
      MONGO_INITDB_DATABASE: "admin"
    command: mongod --auth

- name: create backend container, connect to network and link with mongodb
  docker_container:
    state: started
    name: backend
    image: "{{ backend_image }}"
    ports:
     - "5000:5000"
    networks:
      - name: "{{ docker_network_name }}"
        links:
          - mongo

- name: validating if the backend container is up and running 
  wait_for:
    host: "localhost"
    port: 5000
    delay: 10
    timeout: 30
    state: started
    msg: "backend server is not running"
    
# next step build, push https://www.redhat.com/sysadmin/container-images-ansible // https://docs.ansible.com/ansible/2.9/modules/docker_image_module.html